(*$Copyright 1988 by Olsen & Associates (O&A), Zurich, Switzerland.

                       All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies, and
that both that copyright notice and this permission notice appear in
supporting documentation, and that all modifications of this software
or its documentation not made by O&A or its agents are accompanied
by a prominent notice stating who made the modifications and the date
of the modifications.

O&A DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE AND ITS
DOCUMENTATION, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS.  IN NO EVENT SHALL O&A BE LIABLE FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES, ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE OR ITS DOCUMENTATION.
******************)

DEFINITION MODULE FIOReal;
(*
 * This module is essentially a fancier front end to RealIO.
 * The options correlate directly (if they exist).
 *
 * Write format options:
 *     'w' - total width of the output string (default = 0)
 *     'j' - type of justification (default = justifyRight)
 *     'f' - fill character to be used during justification (default = ' ')
 *     'p' - number of fraction digits (default = 7; Float default = 0)
 *
 *     The following option is only valid for writeScientific,
 *     writeEngineering, and writeReal:
 *     'e' - number of exponent digits (default = 0).
 *
 * Read format options:
 *     'u' - upper bound for legal input (default = MAX)
 *     'l' - lower bound for legal input (default = MIN)
 *     'm' - followed by a string indicates a prompt to be written (default =
 *           'Enter a real number [ <upper-bound> .. <lower-bound> ]: ')
 *
 * Prompted reads are supported and cause a line flush and
 * the default prompt (with the appropriate bounds) to be output.
 *)
EXPORT QUALIFIED
    writeEngineering,
    writeFloating,
    writeScientific,
    readReal;

CONST
    writeEngineering = 'Eng';
    writeFloating    = 'Float';
    writeScientific  = 'Sci';
    writeReal	     = 'Real';  (* Synonym for "writeScientific" *)
    readReal 	     = 'Real';

END FIOReal.
