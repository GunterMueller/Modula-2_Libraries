(*$Copyright 1988 by Olsen & Associates (O&A), Zurich, Switzerland.

                       All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies, and
that both that copyright notice and this permission notice appear in
supporting documentation, and that all modifications of this software
or its documentation not made by O&A or its agents are accompanied
by a prominent notice stating who made the modifications and the date
of the modifications.

O&A DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE AND ITS
DOCUMENTATION, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS.  IN NO EVENT SHALL O&A BE LIABLE FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES, ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE OR ITS DOCUMENTATION.
******************)

DEFINITION MODULE UnixMonitor;
(*
 * Unix is not a re-entrant "operating system".  This module supports
 * a general mutual exclusion policy for Unix.  The procedures Enter/Exit
 * must surround all calls (or sequences of calls) to Unix.  During this
 * section it is guaranteed that no other Task can enter Unix, if they
 * use this system, of course.  Interrupt handlers shouldn't enter Unix.
 * The tasking system saves "errno" on context switches, therefore it
 * is not necessary to protect all calls.   You should protect those
 * calls which modify local data (e.g. malloc, fopen).
 *
 * Polite users of Unix files should use SIGIO & SIGURG to determine if data
 * is available before calling Unix.  See the module UnixAsynchIO for more 
 * details. 
 *)
EXPORT QUALIFIED
    Enter,		Exit,		Install;		

PROCEDURE Enter;
PROCEDURE Exit;
    (*
     * Should be used like a monitor around Unix calls.
     *)

PROCEDURE Install(
	newEnter : PROC;
	newExit  : PROC;
    VAR oldEnter : PROC;
    VAR oldExit  : PROC
    );
    (*
     * These procedures should only be installed by modules which
     * know what they are doing!
     *)
END UnixMonitor.
