(*$Copyright 1988 by Olsen & Associates (O&A), Zurich, Switzerland.

                       All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies, and
that both that copyright notice and this permission notice appear in
supporting documentation, and that all modifications of this software
or its documentation not made by O&A or its agents are accompanied
by a prominent notice stating who made the modifications and the date
of the modifications.

O&A DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE AND ITS
DOCUMENTATION, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS.  IN NO EVENT SHALL O&A BE LIABLE FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES, ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE OR ITS DOCUMENTATION.
******************)

DEFINITION MODULE DosMonitor;
(*
 * Dos is not a re-entrant operating-system. This module
 * supports a general mutual exclusion policy for DOS.
 *
 * The procedures Enter/Exit must surround all calls (or sequences
 * of calls) to DOS. During this section it is guaranteed that no
 * other process can enter DOS, if they use this system, of course.
 *)
IMPORT
    SysTypes;
EXPORT QUALIFIED
    Enter,   Exit,  Install,	criticalSectionFlag;		

PROCEDURE Enter;
    (* 
     * Provides mutual exclusion for DOS.
     *
     * Must be called immediately before a group
     * of SYSTEM.DOSCALLs or SYSTEM.SWIs.
     *)

PROCEDURE Exit;
    (*
     * Provides mutual exclusion for DOS.
     *
     * Must be called immediately after a group
     * of SYSTEM.DOSCALLs or SYSTEM.SWIs.
     *)

PROCEDURE Install(
        newEnter : PROC;  (* To enter critical section *)
        newExit  : PROC;  (* To exit critical section *)
    VAR oldEnter : PROC;  (* Previous method *)
    VAR oldExit  : PROC   (* Previous method *)
    );
    (* 
     * Installs critical section monitor enter/exit
     * for entering and exiting DOS. 
     *
     * The caller should reinstall the old enter/exit procs when its 
     * routines are no more applicable (e. g. during its termination 
     * procedure).
     *)
(*
 * The criticalSectionFlag tells use whether we may enter DOS.
 * If criticalSectionFlag^ is zero, we are free to enter DOS.
 * Otherwise we must wait (poll this flag) until criticalSectionFlag
 * becomes zero.
 *)
VAR
    criticalSectionFlag : POINTER TO SysTypes.CHAR8;


END DosMonitor.
