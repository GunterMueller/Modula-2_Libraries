(*$Copyright 1988 by Olsen & Associates (O&A), Zurich, Switzerland.

                       All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies, and
that both that copyright notice and this permission notice appear in
supporting documentation, and that all modifications of this software
or its documentation not made by O&A or its agents are accompanied
by a prominent notice stating who made the modifications and the date
of the modifications.

O&A DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE AND ITS
DOCUMENTATION, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS.  IN NO EVENT SHALL O&A BE LIABLE FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES, ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE OR ITS DOCUMENTATION.
******************)

DEFINITION MODULE RandomNumbers;
(*  
 * Pseudo-random number generator.
 * Routines to initialize the generator and to get a random real or integer.
 * The generator is initialized with the time of day so SetSeeds does
 * not need to be called.
 *)
IMPORT
    SysTypes;
EXPORT QUALIFIED
    GetReal,	GetInt,		GetCard, 	SetSeeds;


(*
 * The following routines return the pseudo-random numbers in 
 * formats which are most convenient to you.
 *)
PROCEDURE GetReal(
    ) : SysTypes.Real;	(* 0.0 <= RETURN <= 1.0 *)

PROCEDURE GetInt(
    lo : SysTypes.Int;	(* Lowest possible number *)
    hi : SysTypes.Int	(* Highest possible number; must be >= lo *)
    )  : SysTypes.Int;	(* lo <= RETURN <= hi *)

PROCEDURE GetCard(
    lo : SysTypes.Card;	(* Lowest possible number *)
    hi : SysTypes.Card	(* Highest possible number; must be >= lo *)
    )  : SysTypes.Card;	(* lo <= RETURN <= hi *)

PROCEDURE SetSeeds(
    initialValue1 : SysTypes.Card;
    initialValue2 : SysTypes.Card;
    initialValue3 : SysTypes.Card
    );
    (*  
     * Initialize the random generator with three seed values.
     * If this routine is not called, random seeds will be chosen.
     * Provided to allow you to reproduce a series of values.
     *)

END RandomNumbers.
