(*$Copyright 1988 by Olsen & Associates (O&A), Zurich, Switzerland.

                       All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies, and
that both that copyright notice and this permission notice appear in
supporting documentation, and that all modifications of this software
or its documentation not made by O&A or its agents are accompanied
by a prominent notice stating who made the modifications and the date
of the modifications.

O&A DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE AND ITS
DOCUMENTATION, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS.  IN NO EVENT SHALL O&A BE LIABLE FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES, ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE OR ITS DOCUMENTATION.
******************)

DEFINITION MODULE ProgErrOutput;
(*
 * Provides simple low-level access to the error output stream.
 *
 * Initially, it writes directly to the underlying operating system's
 * error reporting file. After Install is called, the procedures supplied
 * to that routine are used instead. It is then the responsibility of
 * the installer to correctly output the error or call the previously
 * installed error output handler.
 *)
EXPORT QUALIFIED 
    WriteString,
    WriteLn,
    WriteStringProc,
    Install;

PROCEDURE WriteString(
    string : ARRAY OF CHAR  (* String to be written *)
    );
    (*
     * Write the string to error output.
     * Calls the currently registered WriteStringProc.  
     *)

PROCEDURE WriteLn;
    (*
     * Causes a new line to be put on the error output stream.
     * Calls the currently registered WriteLnProc.  
     *)

TYPE
    WriteStringProc = PROCEDURE( 
        (*IN*)VAR ARRAY OF CHAR 
    );

CONST
    maxRecursions = 3;

PROCEDURE Install(
        newWriteString : WriteStringProc;  (* To be called by WriteString *)
        newWriteLn     : PROC;             (* To be called by WriteLn *)
    VAR oldWriteString : WriteStringProc;  (* Previous procedure *)
    VAR oldWriteLn     : PROC              (* Previous procedure *)
    );
    (*
     * Provides redirection of the error output stream.
     *
     * The caller supplies the error output support for the entire
     * program. Call chaining is provided for, but not required.
     * If during a write, the currently installed handler is unable
     * to perform the operation, it should call the old procedures
     * so that they may attempt the operation.
     *)

END ProgErrOutput.

